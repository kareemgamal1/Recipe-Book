{"version":3,"file":"src_app_Components_recipes_recipes_module_ts.js","mappings":"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","sources":["./src/app/Components/auth/auth.guard.ts","./src/app/Components/recipes/recipe-detail/recipe-detail.component.ts","./src/app/Components/recipes/recipe-detail/recipe-detail.component.html","./src/app/Components/recipes/recipe-edit/recipe-edit.component.ts","./src/app/Components/recipes/recipe-edit/recipe-edit.component.html","./src/app/Components/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/Components/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/Components/recipes/recipe-list/recipe-list.component.ts","./src/app/Components/recipes/recipe-list/recipe-list.component.html","./src/app/Components/recipes/recipe-start/recipe-start.component.ts","./src/app/Components/recipes/recipe-start/recipe-start.component.html","./src/app/Components/recipes/recipes-resolver.service.ts","./src/app/Components/recipes/recipes-routing.module.ts","./src/app/Components/recipes/recipes.component.ts","./src/app/Components/recipes/recipes.component.html","./src/app/Components/recipes/recipes.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { map, take, tap } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.authService.user.pipe(\r\n      take(1),\r\n      map((user) => {\r\n        const isAuth = !!user;\r\n        if (isAuth) return true;\r\n        return this.router.createUrlTree(['auth']);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css'],\n})\nexport class RecipeDetailComponent implements OnInit {\n  @Input() recipe!: recipe;\n  id!: number;\n\n  constructor(\n    private recipeService: RecipeService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.recipe = this.recipeService.getRecipe(this.id);\n    });\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addIngredients(this.recipe.ingredients);\n  }\n\n  onEdit() {\n    this.router.navigate(['edit'], { relativeTo: this.route });\n  }\n\n  onDelete() {\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['./recipes']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <img src=\"{{recipe.imagePath}}\" height=500px alt=\"{{recipe.name}}\">\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <h1>{{recipe.name}}</h1>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <div class=\"btn-group\" appDropdown>\n      <button class=\"btn btn-primary dropdown-toggle\">Manage Recipe <span\n          class=\"caret\"></span></button>\n      <div class=\"dropdown-menu\">\n        <li><a (click)=\"onAddToShoppingList()\" style=\"cursor: pointer\">To Shopping list</a></li>\n        <li><a (click)=\"onEdit()\">Edit Recipe</a></li>\n        <li><a (click)=\"onDelete()\">Delete Recipe</a></li>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    {{recipe.description}}\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let ingredient of recipe.ingredients\">\n        {{ingredient.name}}\n        {{ingredient.amount}}\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.scss'],\n})\nexport class RecipeEditComponent implements OnInit {\n  id!: number;\n  editMode = false;\n  recipeForm!: FormGroup;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private recipeService: RecipeService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n    });\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImgPath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      console.log(`${recipe}`);\n      recipeName = recipe.name;\n      recipeImgPath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (const ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              name: new FormControl(ingredient.name, Validators.required),\n              amount: new FormControl(ingredient.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/),\n              ]),\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      imagePath: new FormControl(recipeImgPath, Validators.required),\n      ingredients: recipeIngredients,\n    });\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/),\n        ]),\n      })\n    );\n  }\n\n  onReturn() {\n    if (this.editMode) this.router.navigate(['./recipes', this.id]);\n    else this.router.navigate(['./recipes']);\n  }\n\n  onSubmit() {\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, <recipe>this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(<recipe>this.recipeForm.value);\n    }\n    this.onReturn();\n  }\n\n  onCancel() {\n    this.onReturn();\n  }\n  onIngredientDeleted(ingredientIndex: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(ingredientIndex);\n  }\n  get controls() {\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n}\n","<div class=\"row\">\n   <div class=\"col-xs-12\">\n      <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n\n         <div class=\"row\">\n            <div class=\"col-xs-12\">\n               <button type=\"submit\" class=\"btn btn-success\"\n                  [disabled]=\"!recipeForm.valid\">Save</button>\n               <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button>\n            </div>\n         </div>\n\n         <div class=\"row\">\n            <div class=\"col-xs-12\">\n               <div class=\"form-group\">\n                  <label for=\"name\">Name</label>\n                  <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\n               </div>\n            </div>\n         </div>\n\n         <div class=\"row\">\n            <div class=\"col-xs-12\">\n               <div class=\"form-group\">\n                  <label for=\"imagePath\">Image URL</label>\n                  <input type=\"text\" id=\"imagePath\" class=\"form-control\" formControlName=\"imagePath\"\n                     #imagePath>\n                  <img [src]=\"imagePath.value\" alt=\"\" class=\"img-responsive\">\n               </div>\n            </div>\n         </div>\n\n         <div class=\"row\">\n            <div class=\"col-xs-12\">\n               <div class=\"form-group\">\n                  <label for=\"description\">Description</label>\n                  <textarea name=\"description\" id=\"description\" class=\"form-control\" rows=\"6\"\n                     formControlName=\"description\"></textarea>\n               </div>\n            </div>\n         </div>\n\n         <div class=\"row\">\n            <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n               <div class=\"row\" *ngFor=\"let ingredientCtrl of controls;let i = index\"\n                  [formGroupName]=\"i\" style=\"margin-top:10px;\">\n                  <div class=\"col-xs-8\">\n                     <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n                  </div>\n                  <div class=\"col-xs-2\">\n                     <input type=\"number\" class=\"form-control\" formControlName=\"amount\">\n                  </div>\n                  <div class=\"col-xs-2\">\n                     <button type=\"button\" class=\"btn btn-danger\"\n                        (click)=\"onIngredientDeleted(i)\">X</button>\n                  </div>\n               </div>\n               <hr>\n               <div class=\"row\">\n                  <div class=\"col-xs-12\">\n                     <button type=\"button\" class=\"btn btn-success\" (click)=\"onAddIngredient()\">Add\n                        Ingredient</button>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n      </form>\n   </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css'],\n})\nexport class RecipeItemComponent {\n  @Input() recipe!: recipe;\n  @Input() index!: number;\n  constructor() {}\n}\n","<a class=\"list-group-item clearfix \" [routerLink]=\"[index]\" routerLinkActive=\"active\">\n  <div class=\"pull-left\">\n    <h4 class=\"list-group-item-heading\">{{recipe.name}}</h4>\n    <p class=\"list-group-item-text\">{{recipe.description}}</p>\n  </div>\n  <span class=\"pull-right\">\n    <img src=\"{{recipe.imagePath}}\" alt=\"{{recipe.name}}\" style=\"max-height: 50px;\">\n  </span>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css'],\n})\nexport class RecipeListComponent implements OnInit {\n  recipes!: recipe[];\n  constructor(\n    private recipeService: RecipeService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.recipeService.recipesChanged.subscribe((recipes: recipe[]) => {\n      this.recipes = recipes;\n    });\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <button (click)=\"onNewRecipe()\">New Recipe</button>\n    <hr>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-s-12\">\n    <app-recipe-item *ngFor=\"let recipeEl of recipes;let i=index\" [recipe]=\"recipeEl\" [index]=\"i\">\n    </app-recipe-item>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.scss'],\n})\nexport class RecipeStartComponent implements OnInit {\n  constructor() {}\n\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\n  ngOnInit(): void {}\n}\n","<h1>Please Select Recipe!</h1>\n","import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { recipe } from './recipe.model';\nimport { RecipeService } from './recipe.service';\n\n@Injectable({ providedIn: 'root' })\nexport class RecipesResolverService implements Resolve<recipe[]> {\n  constructor(\n    private DataStorage: DataStorageService,\n    private RecipeService: RecipeService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const recipes = this.RecipeService.getRecipes();\n    if (recipes.length === 0) {\n      return this.DataStorage.fetchRecipes();\n    } else {\n      return recipes;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipesResolverService } from './recipes-resolver.service';\r\nimport { RecipesComponent } from './recipes.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecipesComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: RecipeStartComponent },\r\n      { path: 'new', component: RecipeEditComponent },\r\n      {\r\n        path: ':id',\r\n        component: RecipeDetailComponent,\r\n        resolve: [RecipesResolverService],\r\n      },\r\n      {\r\n        path: ':id/edit',\r\n        component: RecipeEditComponent,\r\n        resolve: [RecipesResolverService],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RecipesRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { recipe } from './recipe.model';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'],\n})\nexport class RecipesComponent {\n  selectedRecipe!: recipe;\n\n  constructor() {}\n}\n","<div class=\"row\">\n  <div class=\"col-md-5\">\n    <app-recipe-list></app-recipe-list>\n  </div>\n  <div class=\"col-md-7\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipesRoutingModule } from './recipes-routing.module';\r\nimport { RecipesComponent } from './recipes.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecipesComponent,\r\n    RecipeListComponent,\r\n    RecipeDetailComponent,\r\n    RecipeItemComponent,\r\n    RecipeStartComponent,\r\n    RecipeEditComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    RecipesRoutingModule,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class RecipesModule {}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}